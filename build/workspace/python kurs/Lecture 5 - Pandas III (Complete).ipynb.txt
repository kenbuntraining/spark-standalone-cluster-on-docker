{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Pandas III"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "pd.options.display.max_rows = 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abv</th>\n",
       "      <th>beer_id</th>\n",
       "      <th>brewer_id</th>\n",
       "      <th>beer_name</th>\n",
       "      <th>beer_style</th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>profile_name</th>\n",
       "      <th>review_taste</th>\n",
       "      <th>text</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.0</td>\n",
       "      <td>2511</td>\n",
       "      <td>287</td>\n",
       "      <td>Bell's Cherry Stout</td>\n",
       "      <td>American Stout</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>blaheath</td>\n",
       "      <td>4.5</td>\n",
       "      <td>Batch 8144\\tPitch black in color with a 1/2 f...</td>\n",
       "      <td>2009-10-05 21:31:48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.7</td>\n",
       "      <td>19736</td>\n",
       "      <td>9790</td>\n",
       "      <td>Duck-Rabbit Porter</td>\n",
       "      <td>American Porter</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>GJ40</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Sampled from a 12oz bottle in a standard pint...</td>\n",
       "      <td>2009-10-05 21:32:09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.8</td>\n",
       "      <td>11098</td>\n",
       "      <td>3182</td>\n",
       "      <td>Fürstenberg Premium Pilsener</td>\n",
       "      <td>German Pilsener</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>biegaman</td>\n",
       "      <td>3.5</td>\n",
       "      <td>Haystack yellow with an energetic group of bu...</td>\n",
       "      <td>2009-10-05 21:32:13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9.5</td>\n",
       "      <td>28577</td>\n",
       "      <td>3818</td>\n",
       "      <td>Unearthly (Imperial India Pale Ale)</td>\n",
       "      <td>American Double / Imperial IPA</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>nick76</td>\n",
       "      <td>4.0</td>\n",
       "      <td>The aroma has pine, wood, citrus, caramel, an...</td>\n",
       "      <td>2009-10-05 21:32:37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.8</td>\n",
       "      <td>398</td>\n",
       "      <td>119</td>\n",
       "      <td>Wolaver's Pale Ale</td>\n",
       "      <td>American Pale Ale (APA)</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>champ103</td>\n",
       "      <td>3.0</td>\n",
       "      <td>A: Pours a slightly hazy golden/orange color....</td>\n",
       "      <td>2009-10-05 21:33:14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   abv  beer_id  brewer_id                            beer_name  \\\n",
       "0  7.0     2511        287                  Bell's Cherry Stout   \n",
       "1  5.7    19736       9790                   Duck-Rabbit Porter   \n",
       "2  4.8    11098       3182         Fürstenberg Premium Pilsener   \n",
       "3  9.5    28577       3818  Unearthly (Imperial India Pale Ale)   \n",
       "4  5.8      398        119                   Wolaver's Pale Ale   \n",
       "\n",
       "                       beer_style  review_appearance  review_aroma  \\\n",
       "0                  American Stout                4.5           4.0   \n",
       "1                 American Porter                4.5           4.0   \n",
       "2                 German Pilsener                4.0           3.0   \n",
       "3  American Double / Imperial IPA                4.0           4.0   \n",
       "4         American Pale Ale (APA)                4.0           3.0   \n",
       "\n",
       "   review_overall  review_palate profile_name  review_taste  \\\n",
       "0             4.5            4.0     blaheath           4.5   \n",
       "1             4.5            4.0         GJ40           4.0   \n",
       "2             3.0            3.0     biegaman           3.5   \n",
       "3             4.0            4.0       nick76           4.0   \n",
       "4             4.0            3.5     champ103           3.0   \n",
       "\n",
       "                                                text                time  \n",
       "0   Batch 8144\\tPitch black in color with a 1/2 f... 2009-10-05 21:31:48  \n",
       "1   Sampled from a 12oz bottle in a standard pint... 2009-10-05 21:32:09  \n",
       "2   Haystack yellow with an energetic group of bu... 2009-10-05 21:32:13  \n",
       "3   The aroma has pine, wood, citrus, caramel, an... 2009-10-05 21:32:37  \n",
       "4   A: Pours a slightly hazy golden/orange color.... 2009-10-05 21:33:14  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('data/beer_subset.csv.gz', parse_dates=['time'], compression='gzip')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Groupby"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "The components of a groupby operation are to\n",
    "\n",
    "1. Split a table into groups\n",
    "2. Apply a function to each group\n",
    "3. Combine the results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "In pandas the first step looks like\n",
    "\n",
    "```python\n",
    "df.groupby( grouper )\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "`grouper` can be many things\n",
    "\n",
    "- Series (or string indicating a column in `df`)\n",
    "- function (to be applied on the index)\n",
    "- dict : groups by *values*\n",
    "- `levels=[ names of levels in a MultiIndex ]`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pandas.core.groupby.DataFrameGroupBy object at 0x10473d3c8>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr = df.groupby('beer_style')\n",
    "gr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Haven't really done anything yet. Just some book-keeping to figure out which **keys** go with which **rows**. Keys are the things we've grouped by (each `beer_style` in this case)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "gr."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "gr.groups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['Munich Dunkel Lager', 'Kristalweizen', 'Old Ale', 'Fruit / Vegetable Beer', 'American Amber / Red Lager', 'Tripel', 'American Strong Ale', 'Keller Bier / Zwickel Bier', 'Milk / Sweet Stout', 'English Barleywine', 'American Black Ale', 'Hefeweizen', 'Gose', 'English Brown Ale', 'Belgian Strong Pale Ale', 'Dunkelweizen', 'Belgian IPA', 'Doppelbock', 'Rye Beer', 'Baltic Porter', 'Lambic - Fruit', 'Kölsch', 'Cream Ale', 'English Stout', 'Belgian Pale Ale', 'Rauchbier', 'Extra Special / Strong Bitter (ESB)', 'American Double / Imperial Pilsner', 'English Strong Ale', 'Sahti', 'Schwarzbier', 'Dortmunder / Export Lager', 'American Double / Imperial Stout', 'California Common / Steam Beer', 'English Bitter', 'English Pale Ale', 'American Wild Ale', 'American Malt Liquor', 'Scotch Ale / Wee Heavy', 'English Dark Mild Ale', 'Munich Helles Lager', 'American Amber / Red Ale', 'Pumpkin Ale', 'Saison / Farmhouse Ale', 'American Pale Ale (APA)', 'Flanders Red Ale', 'American IPA', 'Herbed / Spiced Beer', 'American Adjunct Lager', 'Scottish Ale', 'American Blonde Ale', 'Oatmeal Stout', 'Euro Dark Lager', 'Russian Imperial Stout', 'Smoked Beer', 'Altbier', 'English India Pale Ale (IPA)', 'Dubbel', 'American Brown Ale', 'Irish Red Ale', 'German Pilsener', 'Czech Pilsener', 'American Pale Lager', 'Belgian Strong Dark Ale', 'Vienna Lager', 'Weizenbock', 'Chile Beer', 'Quadrupel (Quad)', 'Bock', 'Berliner Weissbier', 'American Porter', 'Happoshu', 'Roggenbier', 'Euro Pale Lager', 'Maibock / Helles Bock', 'American Double / Imperial IPA', 'Foreign / Export Stout', 'American Pale Wheat Ale', 'American Barleywine', 'Belgian Dark Ale', 'Bière de Garde', 'Witbier', 'American Stout', 'Faro', 'Märzen / Oktoberfest', 'Gueuze', 'Flanders Oud Bruin', 'Lambic - Unblended', 'Euro Strong Lager', 'English Porter', 'Wheatwine', 'Light Lager', 'Irish Dry Stout'])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.groups.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abv</th>\n",
       "      <th>beer_id</th>\n",
       "      <th>brewer_id</th>\n",
       "      <th>beer_name</th>\n",
       "      <th>beer_style</th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>profile_name</th>\n",
       "      <th>review_taste</th>\n",
       "      <th>text</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>8.0</td>\n",
       "      <td>53132</td>\n",
       "      <td>16866</td>\n",
       "      <td>Rugbrød</td>\n",
       "      <td>Rye Beer</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>Halcyondays</td>\n",
       "      <td>3.5</td>\n",
       "      <td>On cask at The Bruery, Review 2.0, entering t...</td>\n",
       "      <td>2009-10-05 22:31:38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>385</th>\n",
       "      <td>9.0</td>\n",
       "      <td>37156</td>\n",
       "      <td>651</td>\n",
       "      <td>Old Habit</td>\n",
       "      <td>Rye Beer</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>wyattshotmaker</td>\n",
       "      <td>4.5</td>\n",
       "      <td>poured into my little samuel smith flute, thi...</td>\n",
       "      <td>2009-10-06 04:16:29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401</th>\n",
       "      <td>8.0</td>\n",
       "      <td>3158</td>\n",
       "      <td>610</td>\n",
       "      <td>Hop Rod Rye</td>\n",
       "      <td>Rye Beer</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>TheDeuce</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Bear Republic Hop Rod Rye....\\t\\tAppearance-d...</td>\n",
       "      <td>2009-10-06 04:42:07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>966</th>\n",
       "      <td>8.0</td>\n",
       "      <td>3158</td>\n",
       "      <td>610</td>\n",
       "      <td>Hop Rod Rye</td>\n",
       "      <td>Rye Beer</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>bkett01</td>\n",
       "      <td>4.5</td>\n",
       "      <td>Enjoyed from the tap at the Bear Republic Bre...</td>\n",
       "      <td>2009-10-07 01:28:17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     abv  beer_id  brewer_id    beer_name beer_style  review_appearance  \\\n",
       "54   8.0    53132      16866      Rugbrød   Rye Beer                4.0   \n",
       "385  9.0    37156        651    Old Habit   Rye Beer                5.0   \n",
       "401  8.0     3158        610  Hop Rod Rye   Rye Beer                3.5   \n",
       "966  8.0     3158        610  Hop Rod Rye   Rye Beer                4.0   \n",
       "\n",
       "     review_aroma  review_overall  review_palate    profile_name  \\\n",
       "54            4.0             3.5            3.5     Halcyondays   \n",
       "385           4.5             4.0            4.5  wyattshotmaker   \n",
       "401           4.0             4.0            4.5        TheDeuce   \n",
       "966           4.5             4.0            4.0         bkett01   \n",
       "\n",
       "     review_taste                                               text  \\\n",
       "54            3.5   On cask at The Bruery, Review 2.0, entering t...   \n",
       "385           4.5   poured into my little samuel smith flute, thi...   \n",
       "401           4.0   Bear Republic Hop Rod Rye....\\t\\tAppearance-d...   \n",
       "966           4.5   Enjoyed from the tap at the Bear Republic Bre...   \n",
       "\n",
       "                   time  \n",
       "54  2009-10-05 22:31:38  \n",
       "385 2009-10-06 04:16:29  \n",
       "401 2009-10-06 04:42:07  \n",
       "966 2009-10-07 01:28:17  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.get_group('Rye Beer')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "There's a generic aggregation function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "gr.agg?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Which accepts some common operations as strings:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abv</th>\n",
       "      <th>beer_id</th>\n",
       "      <th>brewer_id</th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>review_taste</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>5.850000</td>\n",
       "      <td>43260.500000</td>\n",
       "      <td>419.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>4.872727</td>\n",
       "      <td>12829.909091</td>\n",
       "      <td>2585.909091</td>\n",
       "      <td>2.954545</td>\n",
       "      <td>2.613636</td>\n",
       "      <td>3.272727</td>\n",
       "      <td>2.909091</td>\n",
       "      <td>2.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>6.195652</td>\n",
       "      <td>28366.777778</td>\n",
       "      <td>2531.111111</td>\n",
       "      <td>3.740741</td>\n",
       "      <td>3.592593</td>\n",
       "      <td>3.870370</td>\n",
       "      <td>3.555556</td>\n",
       "      <td>3.777778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>4.822857</td>\n",
       "      <td>22277.500000</td>\n",
       "      <td>5620.125000</td>\n",
       "      <td>3.437500</td>\n",
       "      <td>3.312500</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.187500</td>\n",
       "      <td>3.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>10.208333</td>\n",
       "      <td>32457.250000</td>\n",
       "      <td>3744.083333</td>\n",
       "      <td>3.958333</td>\n",
       "      <td>3.937500</td>\n",
       "      <td>3.729167</td>\n",
       "      <td>3.895833</td>\n",
       "      <td>3.937500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tripel</th>\n",
       "      <td>9.329412</td>\n",
       "      <td>16027.705882</td>\n",
       "      <td>2882.882353</td>\n",
       "      <td>4.264706</td>\n",
       "      <td>4.088235</td>\n",
       "      <td>3.970588</td>\n",
       "      <td>3.911765</td>\n",
       "      <td>4.176471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vienna Lager</th>\n",
       "      <td>4.985714</td>\n",
       "      <td>19497.750000</td>\n",
       "      <td>6180.750000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.562500</td>\n",
       "      <td>3.312500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weizenbock</th>\n",
       "      <td>8.350000</td>\n",
       "      <td>19540.500000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wheatwine</th>\n",
       "      <td>11.075000</td>\n",
       "      <td>36980.000000</td>\n",
       "      <td>629.600000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Witbier</th>\n",
       "      <td>6.175000</td>\n",
       "      <td>27346.600000</td>\n",
       "      <td>3583.700000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>3.650000</td>\n",
       "      <td>3.600000</td>\n",
       "      <td>3.550000</td>\n",
       "      <td>3.650000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  abv       beer_id    brewer_id  \\\n",
       "beer_style                                                         \n",
       "Altbier                      5.850000  43260.500000   419.500000   \n",
       "American Adjunct Lager       4.872727  12829.909091  2585.909091   \n",
       "American Amber / Red Ale     6.195652  28366.777778  2531.111111   \n",
       "American Amber / Red Lager   4.822857  22277.500000  5620.125000   \n",
       "American Barleywine         10.208333  32457.250000  3744.083333   \n",
       "...                               ...           ...          ...   \n",
       "Tripel                       9.329412  16027.705882  2882.882353   \n",
       "Vienna Lager                 4.985714  19497.750000  6180.750000   \n",
       "Weizenbock                   8.350000  19540.500000   250.000000   \n",
       "Wheatwine                   11.075000  36980.000000   629.600000   \n",
       "Witbier                      6.175000  27346.600000  3583.700000   \n",
       "\n",
       "                            review_appearance  review_aroma  review_overall  \\\n",
       "beer_style                                                                    \n",
       "Altbier                              4.000000      3.750000        4.000000   \n",
       "American Adjunct Lager               2.954545      2.613636        3.272727   \n",
       "American Amber / Red Ale             3.740741      3.592593        3.870370   \n",
       "American Amber / Red Lager           3.437500      3.312500        3.375000   \n",
       "American Barleywine                  3.958333      3.937500        3.729167   \n",
       "...                                       ...           ...             ...   \n",
       "Tripel                               4.264706      4.088235        3.970588   \n",
       "Vienna Lager                         3.500000      3.250000        3.375000   \n",
       "Weizenbock                           4.000000      3.750000        4.250000   \n",
       "Wheatwine                            3.800000      4.000000        3.500000   \n",
       "Witbier                              3.750000      3.650000        3.600000   \n",
       "\n",
       "                            review_palate  review_taste  \n",
       "beer_style                                               \n",
       "Altbier                          3.750000      4.000000  \n",
       "American Adjunct Lager           2.909091      2.750000  \n",
       "American Amber / Red Ale         3.555556      3.777778  \n",
       "American Amber / Red Lager       3.187500      3.125000  \n",
       "American Barleywine              3.895833      3.937500  \n",
       "...                                   ...           ...  \n",
       "Tripel                           3.911765      4.176471  \n",
       "Vienna Lager                     3.562500      3.312500  \n",
       "Weizenbock                       4.250000      4.250000  \n",
       "Wheatwine                        4.000000      3.700000  \n",
       "Witbier                          3.550000      3.650000  \n",
       "\n",
       "[93 rows x 8 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.agg('mean')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Or functions that can operate on Pandas or Numpy objects:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abv</th>\n",
       "      <th>beer_id</th>\n",
       "      <th>brewer_id</th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>review_taste</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>5.850000</td>\n",
       "      <td>43260.500000</td>\n",
       "      <td>419.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>4.872727</td>\n",
       "      <td>12829.909091</td>\n",
       "      <td>2585.909091</td>\n",
       "      <td>2.954545</td>\n",
       "      <td>2.613636</td>\n",
       "      <td>3.272727</td>\n",
       "      <td>2.909091</td>\n",
       "      <td>2.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>6.195652</td>\n",
       "      <td>28366.777778</td>\n",
       "      <td>2531.111111</td>\n",
       "      <td>3.740741</td>\n",
       "      <td>3.592593</td>\n",
       "      <td>3.870370</td>\n",
       "      <td>3.555556</td>\n",
       "      <td>3.777778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>4.822857</td>\n",
       "      <td>22277.500000</td>\n",
       "      <td>5620.125000</td>\n",
       "      <td>3.437500</td>\n",
       "      <td>3.312500</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.187500</td>\n",
       "      <td>3.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>10.208333</td>\n",
       "      <td>32457.250000</td>\n",
       "      <td>3744.083333</td>\n",
       "      <td>3.958333</td>\n",
       "      <td>3.937500</td>\n",
       "      <td>3.729167</td>\n",
       "      <td>3.895833</td>\n",
       "      <td>3.937500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tripel</th>\n",
       "      <td>9.329412</td>\n",
       "      <td>16027.705882</td>\n",
       "      <td>2882.882353</td>\n",
       "      <td>4.264706</td>\n",
       "      <td>4.088235</td>\n",
       "      <td>3.970588</td>\n",
       "      <td>3.911765</td>\n",
       "      <td>4.176471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vienna Lager</th>\n",
       "      <td>4.985714</td>\n",
       "      <td>19497.750000</td>\n",
       "      <td>6180.750000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.562500</td>\n",
       "      <td>3.312500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weizenbock</th>\n",
       "      <td>8.350000</td>\n",
       "      <td>19540.500000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wheatwine</th>\n",
       "      <td>11.075000</td>\n",
       "      <td>36980.000000</td>\n",
       "      <td>629.600000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Witbier</th>\n",
       "      <td>6.175000</td>\n",
       "      <td>27346.600000</td>\n",
       "      <td>3583.700000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>3.650000</td>\n",
       "      <td>3.600000</td>\n",
       "      <td>3.550000</td>\n",
       "      <td>3.650000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  abv       beer_id    brewer_id  \\\n",
       "beer_style                                                         \n",
       "Altbier                      5.850000  43260.500000   419.500000   \n",
       "American Adjunct Lager       4.872727  12829.909091  2585.909091   \n",
       "American Amber / Red Ale     6.195652  28366.777778  2531.111111   \n",
       "American Amber / Red Lager   4.822857  22277.500000  5620.125000   \n",
       "American Barleywine         10.208333  32457.250000  3744.083333   \n",
       "...                               ...           ...          ...   \n",
       "Tripel                       9.329412  16027.705882  2882.882353   \n",
       "Vienna Lager                 4.985714  19497.750000  6180.750000   \n",
       "Weizenbock                   8.350000  19540.500000   250.000000   \n",
       "Wheatwine                   11.075000  36980.000000   629.600000   \n",
       "Witbier                      6.175000  27346.600000  3583.700000   \n",
       "\n",
       "                            review_appearance  review_aroma  review_overall  \\\n",
       "beer_style                                                                    \n",
       "Altbier                              4.000000      3.750000        4.000000   \n",
       "American Adjunct Lager               2.954545      2.613636        3.272727   \n",
       "American Amber / Red Ale             3.740741      3.592593        3.870370   \n",
       "American Amber / Red Lager           3.437500      3.312500        3.375000   \n",
       "American Barleywine                  3.958333      3.937500        3.729167   \n",
       "...                                       ...           ...             ...   \n",
       "Tripel                               4.264706      4.088235        3.970588   \n",
       "Vienna Lager                         3.500000      3.250000        3.375000   \n",
       "Weizenbock                           4.000000      3.750000        4.250000   \n",
       "Wheatwine                            3.800000      4.000000        3.500000   \n",
       "Witbier                              3.750000      3.650000        3.600000   \n",
       "\n",
       "                            review_palate  review_taste  \n",
       "beer_style                                               \n",
       "Altbier                          3.750000      4.000000  \n",
       "American Adjunct Lager           2.909091      2.750000  \n",
       "American Amber / Red Ale         3.555556      3.777778  \n",
       "American Amber / Red Lager       3.187500      3.125000  \n",
       "American Barleywine              3.895833      3.937500  \n",
       "...                                   ...           ...  \n",
       "Tripel                           3.911765      4.176471  \n",
       "Vienna Lager                     3.562500      3.312500  \n",
       "Weizenbock                       4.250000      4.250000  \n",
       "Wheatwine                        4.000000      3.700000  \n",
       "Witbier                          3.550000      3.650000  \n",
       "\n",
       "[93 rows x 8 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.agg(np.mean)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "And for many common operations, there are also convenience functions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abv</th>\n",
       "      <th>beer_id</th>\n",
       "      <th>brewer_id</th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>review_taste</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>5.850000</td>\n",
       "      <td>43260.500000</td>\n",
       "      <td>419.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>4.872727</td>\n",
       "      <td>12829.909091</td>\n",
       "      <td>2585.909091</td>\n",
       "      <td>2.954545</td>\n",
       "      <td>2.613636</td>\n",
       "      <td>3.272727</td>\n",
       "      <td>2.909091</td>\n",
       "      <td>2.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>6.195652</td>\n",
       "      <td>28366.777778</td>\n",
       "      <td>2531.111111</td>\n",
       "      <td>3.740741</td>\n",
       "      <td>3.592593</td>\n",
       "      <td>3.870370</td>\n",
       "      <td>3.555556</td>\n",
       "      <td>3.777778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>4.822857</td>\n",
       "      <td>22277.500000</td>\n",
       "      <td>5620.125000</td>\n",
       "      <td>3.437500</td>\n",
       "      <td>3.312500</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.187500</td>\n",
       "      <td>3.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>10.208333</td>\n",
       "      <td>32457.250000</td>\n",
       "      <td>3744.083333</td>\n",
       "      <td>3.958333</td>\n",
       "      <td>3.937500</td>\n",
       "      <td>3.729167</td>\n",
       "      <td>3.895833</td>\n",
       "      <td>3.937500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tripel</th>\n",
       "      <td>9.329412</td>\n",
       "      <td>16027.705882</td>\n",
       "      <td>2882.882353</td>\n",
       "      <td>4.264706</td>\n",
       "      <td>4.088235</td>\n",
       "      <td>3.970588</td>\n",
       "      <td>3.911765</td>\n",
       "      <td>4.176471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vienna Lager</th>\n",
       "      <td>4.985714</td>\n",
       "      <td>19497.750000</td>\n",
       "      <td>6180.750000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.562500</td>\n",
       "      <td>3.312500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weizenbock</th>\n",
       "      <td>8.350000</td>\n",
       "      <td>19540.500000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wheatwine</th>\n",
       "      <td>11.075000</td>\n",
       "      <td>36980.000000</td>\n",
       "      <td>629.600000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Witbier</th>\n",
       "      <td>6.175000</td>\n",
       "      <td>27346.600000</td>\n",
       "      <td>3583.700000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>3.650000</td>\n",
       "      <td>3.600000</td>\n",
       "      <td>3.550000</td>\n",
       "      <td>3.650000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  abv       beer_id    brewer_id  \\\n",
       "beer_style                                                         \n",
       "Altbier                      5.850000  43260.500000   419.500000   \n",
       "American Adjunct Lager       4.872727  12829.909091  2585.909091   \n",
       "American Amber / Red Ale     6.195652  28366.777778  2531.111111   \n",
       "American Amber / Red Lager   4.822857  22277.500000  5620.125000   \n",
       "American Barleywine         10.208333  32457.250000  3744.083333   \n",
       "...                               ...           ...          ...   \n",
       "Tripel                       9.329412  16027.705882  2882.882353   \n",
       "Vienna Lager                 4.985714  19497.750000  6180.750000   \n",
       "Weizenbock                   8.350000  19540.500000   250.000000   \n",
       "Wheatwine                   11.075000  36980.000000   629.600000   \n",
       "Witbier                      6.175000  27346.600000  3583.700000   \n",
       "\n",
       "                            review_appearance  review_aroma  review_overall  \\\n",
       "beer_style                                                                    \n",
       "Altbier                              4.000000      3.750000        4.000000   \n",
       "American Adjunct Lager               2.954545      2.613636        3.272727   \n",
       "American Amber / Red Ale             3.740741      3.592593        3.870370   \n",
       "American Amber / Red Lager           3.437500      3.312500        3.375000   \n",
       "American Barleywine                  3.958333      3.937500        3.729167   \n",
       "...                                       ...           ...             ...   \n",
       "Tripel                               4.264706      4.088235        3.970588   \n",
       "Vienna Lager                         3.500000      3.250000        3.375000   \n",
       "Weizenbock                           4.000000      3.750000        4.250000   \n",
       "Wheatwine                            3.800000      4.000000        3.500000   \n",
       "Witbier                              3.750000      3.650000        3.600000   \n",
       "\n",
       "                            review_palate  review_taste  \n",
       "beer_style                                               \n",
       "Altbier                          3.750000      4.000000  \n",
       "American Adjunct Lager           2.909091      2.750000  \n",
       "American Amber / Red Ale         3.555556      3.777778  \n",
       "American Amber / Red Lager       3.187500      3.125000  \n",
       "American Barleywine              3.895833      3.937500  \n",
       "...                                   ...           ...  \n",
       "Tripel                           3.911765      4.176471  \n",
       "Vienna Lager                     3.562500      3.312500  \n",
       "Weizenbock                       4.250000      4.250000  \n",
       "Wheatwine                        4.000000      3.700000  \n",
       "Witbier                          3.550000      3.650000  \n",
       "\n",
       "[93 rows x 8 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "By default the aggregation functions get applied to all columns, but we can subset:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['review_appearance',\n",
       " 'review_aroma',\n",
       " 'review_overall',\n",
       " 'review_palate',\n",
       " 'review_taste']"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "review_cols = [c for c in df.columns if c[0:6] == 'review']\n",
    "review_cols"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>review_taste</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>2.954545</td>\n",
       "      <td>2.613636</td>\n",
       "      <td>3.272727</td>\n",
       "      <td>2.909091</td>\n",
       "      <td>2.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>3.740741</td>\n",
       "      <td>3.592593</td>\n",
       "      <td>3.870370</td>\n",
       "      <td>3.555556</td>\n",
       "      <td>3.777778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>3.437500</td>\n",
       "      <td>3.312500</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.187500</td>\n",
       "      <td>3.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>3.958333</td>\n",
       "      <td>3.937500</td>\n",
       "      <td>3.729167</td>\n",
       "      <td>3.895833</td>\n",
       "      <td>3.937500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tripel</th>\n",
       "      <td>4.264706</td>\n",
       "      <td>4.088235</td>\n",
       "      <td>3.970588</td>\n",
       "      <td>3.911765</td>\n",
       "      <td>4.176471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vienna Lager</th>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.562500</td>\n",
       "      <td>3.312500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weizenbock</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wheatwine</th>\n",
       "      <td>3.800000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Witbier</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>3.650000</td>\n",
       "      <td>3.600000</td>\n",
       "      <td>3.550000</td>\n",
       "      <td>3.650000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            review_appearance  review_aroma  review_overall  \\\n",
       "beer_style                                                                    \n",
       "Altbier                              4.000000      3.750000        4.000000   \n",
       "American Adjunct Lager               2.954545      2.613636        3.272727   \n",
       "American Amber / Red Ale             3.740741      3.592593        3.870370   \n",
       "American Amber / Red Lager           3.437500      3.312500        3.375000   \n",
       "American Barleywine                  3.958333      3.937500        3.729167   \n",
       "...                                       ...           ...             ...   \n",
       "Tripel                               4.264706      4.088235        3.970588   \n",
       "Vienna Lager                         3.500000      3.250000        3.375000   \n",
       "Weizenbock                           4.000000      3.750000        4.250000   \n",
       "Wheatwine                            3.800000      4.000000        3.500000   \n",
       "Witbier                              3.750000      3.650000        3.600000   \n",
       "\n",
       "                            review_palate  review_taste  \n",
       "beer_style                                               \n",
       "Altbier                          3.750000      4.000000  \n",
       "American Adjunct Lager           2.909091      2.750000  \n",
       "American Amber / Red Ale         3.555556      3.777778  \n",
       "American Amber / Red Lager       3.187500      3.125000  \n",
       "American Barleywine              3.895833      3.937500  \n",
       "...                                   ...           ...  \n",
       "Tripel                           3.911765      4.176471  \n",
       "Vienna Lager                     3.562500      3.312500  \n",
       "Weizenbock                       4.250000      4.250000  \n",
       "Wheatwine                        4.000000      3.700000  \n",
       "Witbier                          3.550000      3.650000  \n",
       "\n",
       "[93 rows x 5 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr[review_cols].agg('mean')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "`.` attribute lookup works as well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beer_style\n",
       "Altbier                        5.850000\n",
       "American Adjunct Lager         4.872727\n",
       "American Amber / Red Ale       6.195652\n",
       "American Amber / Red Lager     4.822857\n",
       "American Barleywine           10.208333\n",
       "                                ...    \n",
       "Tripel                         9.329412\n",
       "Vienna Lager                   4.985714\n",
       "Weizenbock                     8.350000\n",
       "Wheatwine                     11.075000\n",
       "Witbier                        6.175000\n",
       "Name: abv, dtype: float64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.abv.agg('mean')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beer_style\n",
       "Altbier                        5.850000\n",
       "American Adjunct Lager         4.872727\n",
       "American Amber / Red Ale       6.195652\n",
       "American Amber / Red Lager     4.822857\n",
       "American Barleywine           10.208333\n",
       "                                ...    \n",
       "Tripel                         9.329412\n",
       "Vienna Lager                   4.985714\n",
       "Weizenbock                     8.350000\n",
       "Wheatwine                     11.075000\n",
       "Witbier                        6.175000\n",
       "Name: abv, dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.abv.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Example\n",
    "\n",
    "Find the `beer_styles` with the greatest variance in `abv`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pandas.core.groupby.SeriesGroupBy object at 0x112cad1d0>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('beer_style')['abv']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beer_style\n",
       "Altbier                       1.202082\n",
       "American Adjunct Lager        0.414248\n",
       "American Amber / Red Ale      1.337392\n",
       "American Amber / Red Lager    0.924296\n",
       "American Barleywine           1.165040\n",
       "                                ...   \n",
       "Tripel                        0.890761\n",
       "Vienna Lager                  0.779805\n",
       "Weizenbock                    0.212132\n",
       "Wheatwine                     0.788987\n",
       "Witbier                       1.899598\n",
       "Name: abv, dtype: float64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('beer_style')['abv'].std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beer_style\n",
       "Flanders Oud Bruin                  3.915354\n",
       "Old Ale                             2.178532\n",
       "Russian Imperial Stout              2.141669\n",
       "American Double / Imperial Stout    2.021157\n",
       "Fruit / Vegetable Beer              1.964282\n",
       "                                      ...   \n",
       "Kristalweizen                            NaN\n",
       "Lambic - Unblended                       NaN\n",
       "Rauchbier                                NaN\n",
       "Roggenbier                               NaN\n",
       "Sahti                                    NaN\n",
       "Name: abv, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('beer_style')['abv'].std().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Some more complex examples"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Multiple aggregations on one column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>2.613636</td>\n",
       "      <td>0.596255</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>3.592593</td>\n",
       "      <td>0.636049</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>3.312500</td>\n",
       "      <td>0.842509</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>3.937500</td>\n",
       "      <td>0.449940</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                mean       std  count\n",
       "beer_style                                           \n",
       "Altbier                     3.750000  0.353553      2\n",
       "American Adjunct Lager      2.613636  0.596255     22\n",
       "American Amber / Red Ale    3.592593  0.636049     27\n",
       "American Amber / Red Lager  3.312500  0.842509      8\n",
       "American Barleywine         3.937500  0.449940     24"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr['review_aroma'].agg(['mean', np.std, 'count']).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Single aggregation on multiple columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>review_taste</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>2.954545</td>\n",
       "      <td>2.613636</td>\n",
       "      <td>3.272727</td>\n",
       "      <td>2.909091</td>\n",
       "      <td>2.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>3.740741</td>\n",
       "      <td>3.592593</td>\n",
       "      <td>3.870370</td>\n",
       "      <td>3.555556</td>\n",
       "      <td>3.777778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>3.437500</td>\n",
       "      <td>3.312500</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.187500</td>\n",
       "      <td>3.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>3.958333</td>\n",
       "      <td>3.937500</td>\n",
       "      <td>3.729167</td>\n",
       "      <td>3.895833</td>\n",
       "      <td>3.937500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tripel</th>\n",
       "      <td>4.264706</td>\n",
       "      <td>4.088235</td>\n",
       "      <td>3.970588</td>\n",
       "      <td>3.911765</td>\n",
       "      <td>4.176471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vienna Lager</th>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.562500</td>\n",
       "      <td>3.312500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weizenbock</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>4.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wheatwine</th>\n",
       "      <td>3.800000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Witbier</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>3.650000</td>\n",
       "      <td>3.600000</td>\n",
       "      <td>3.550000</td>\n",
       "      <td>3.650000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            review_appearance  review_aroma  review_overall  \\\n",
       "beer_style                                                                    \n",
       "Altbier                              4.000000      3.750000        4.000000   \n",
       "American Adjunct Lager               2.954545      2.613636        3.272727   \n",
       "American Amber / Red Ale             3.740741      3.592593        3.870370   \n",
       "American Amber / Red Lager           3.437500      3.312500        3.375000   \n",
       "American Barleywine                  3.958333      3.937500        3.729167   \n",
       "...                                       ...           ...             ...   \n",
       "Tripel                               4.264706      4.088235        3.970588   \n",
       "Vienna Lager                         3.500000      3.250000        3.375000   \n",
       "Weizenbock                           4.000000      3.750000        4.250000   \n",
       "Wheatwine                            3.800000      4.000000        3.500000   \n",
       "Witbier                              3.750000      3.650000        3.600000   \n",
       "\n",
       "                            review_palate  review_taste  \n",
       "beer_style                                               \n",
       "Altbier                          3.750000      4.000000  \n",
       "American Adjunct Lager           2.909091      2.750000  \n",
       "American Amber / Red Ale         3.555556      3.777778  \n",
       "American Amber / Red Lager       3.187500      3.125000  \n",
       "American Barleywine              3.895833      3.937500  \n",
       "...                                   ...           ...  \n",
       "Tripel                           3.911765      4.176471  \n",
       "Vienna Lager                     3.562500      3.312500  \n",
       "Weizenbock                       4.250000      4.250000  \n",
       "Wheatwine                        4.000000      3.700000  \n",
       "Witbier                          3.550000      3.650000  \n",
       "\n",
       "[93 rows x 5 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr[review_cols].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Multiple aggregations on multiple columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">review_appearance</th>\n",
       "      <th colspan=\"3\" halign=\"left\">review_aroma</th>\n",
       "      <th colspan=\"3\" halign=\"left\">review_overall</th>\n",
       "      <th colspan=\"3\" halign=\"left\">review_palate</th>\n",
       "      <th colspan=\"3\" halign=\"left\">review_taste</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>count</th>\n",
       "      <th>std</th>\n",
       "      <th>mean</th>\n",
       "      <th>count</th>\n",
       "      <th>std</th>\n",
       "      <th>mean</th>\n",
       "      <th>count</th>\n",
       "      <th>std</th>\n",
       "      <th>mean</th>\n",
       "      <th>count</th>\n",
       "      <th>std</th>\n",
       "      <th>mean</th>\n",
       "      <th>count</th>\n",
       "      <th>std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>2.954545</td>\n",
       "      <td>22</td>\n",
       "      <td>0.722250</td>\n",
       "      <td>2.613636</td>\n",
       "      <td>22</td>\n",
       "      <td>0.596255</td>\n",
       "      <td>3.272727</td>\n",
       "      <td>22</td>\n",
       "      <td>0.667748</td>\n",
       "      <td>2.909091</td>\n",
       "      <td>22</td>\n",
       "      <td>0.478996</td>\n",
       "      <td>2.750000</td>\n",
       "      <td>22</td>\n",
       "      <td>0.631514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>3.740741</td>\n",
       "      <td>27</td>\n",
       "      <td>0.625890</td>\n",
       "      <td>3.592593</td>\n",
       "      <td>27</td>\n",
       "      <td>0.636049</td>\n",
       "      <td>3.870370</td>\n",
       "      <td>27</td>\n",
       "      <td>0.629294</td>\n",
       "      <td>3.555556</td>\n",
       "      <td>27</td>\n",
       "      <td>0.640513</td>\n",
       "      <td>3.777778</td>\n",
       "      <td>27</td>\n",
       "      <td>0.763763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>3.437500</td>\n",
       "      <td>8</td>\n",
       "      <td>0.417261</td>\n",
       "      <td>3.312500</td>\n",
       "      <td>8</td>\n",
       "      <td>0.842509</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>8</td>\n",
       "      <td>1.187735</td>\n",
       "      <td>3.187500</td>\n",
       "      <td>8</td>\n",
       "      <td>0.961305</td>\n",
       "      <td>3.125000</td>\n",
       "      <td>8</td>\n",
       "      <td>1.125992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>3.958333</td>\n",
       "      <td>24</td>\n",
       "      <td>0.529903</td>\n",
       "      <td>3.937500</td>\n",
       "      <td>24</td>\n",
       "      <td>0.449940</td>\n",
       "      <td>3.729167</td>\n",
       "      <td>24</td>\n",
       "      <td>0.465766</td>\n",
       "      <td>3.895833</td>\n",
       "      <td>24</td>\n",
       "      <td>0.389514</td>\n",
       "      <td>3.937500</td>\n",
       "      <td>24</td>\n",
       "      <td>0.517362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tripel</th>\n",
       "      <td>4.264706</td>\n",
       "      <td>17</td>\n",
       "      <td>0.358715</td>\n",
       "      <td>4.088235</td>\n",
       "      <td>17</td>\n",
       "      <td>0.363803</td>\n",
       "      <td>3.970588</td>\n",
       "      <td>17</td>\n",
       "      <td>0.329326</td>\n",
       "      <td>3.911765</td>\n",
       "      <td>17</td>\n",
       "      <td>0.317967</td>\n",
       "      <td>4.176471</td>\n",
       "      <td>17</td>\n",
       "      <td>0.350944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vienna Lager</th>\n",
       "      <td>3.500000</td>\n",
       "      <td>8</td>\n",
       "      <td>0.377964</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>8</td>\n",
       "      <td>0.534522</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>8</td>\n",
       "      <td>0.517549</td>\n",
       "      <td>3.562500</td>\n",
       "      <td>8</td>\n",
       "      <td>0.678101</td>\n",
       "      <td>3.312500</td>\n",
       "      <td>8</td>\n",
       "      <td>0.458063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weizenbock</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>4.250000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wheatwine</th>\n",
       "      <td>3.800000</td>\n",
       "      <td>5</td>\n",
       "      <td>0.273861</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>5</td>\n",
       "      <td>0.353553</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.700000</td>\n",
       "      <td>5</td>\n",
       "      <td>0.447214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Witbier</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>10</td>\n",
       "      <td>0.540062</td>\n",
       "      <td>3.650000</td>\n",
       "      <td>10</td>\n",
       "      <td>0.625833</td>\n",
       "      <td>3.600000</td>\n",
       "      <td>10</td>\n",
       "      <td>0.658281</td>\n",
       "      <td>3.550000</td>\n",
       "      <td>10</td>\n",
       "      <td>0.761942</td>\n",
       "      <td>3.650000</td>\n",
       "      <td>10</td>\n",
       "      <td>0.529675</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           review_appearance                 review_aroma  \\\n",
       "                                        mean count       std         mean   \n",
       "beer_style                                                                  \n",
       "Altbier                             4.000000     2  0.707107     3.750000   \n",
       "American Adjunct Lager              2.954545    22  0.722250     2.613636   \n",
       "American Amber / Red Ale            3.740741    27  0.625890     3.592593   \n",
       "American Amber / Red Lager          3.437500     8  0.417261     3.312500   \n",
       "American Barleywine                 3.958333    24  0.529903     3.937500   \n",
       "...                                      ...   ...       ...          ...   \n",
       "Tripel                              4.264706    17  0.358715     4.088235   \n",
       "Vienna Lager                        3.500000     8  0.377964     3.250000   \n",
       "Weizenbock                          4.000000     2  0.000000     3.750000   \n",
       "Wheatwine                           3.800000     5  0.273861     4.000000   \n",
       "Witbier                             3.750000    10  0.540062     3.650000   \n",
       "\n",
       "                                           review_overall                  \\\n",
       "                           count       std           mean count       std   \n",
       "beer_style                                                                  \n",
       "Altbier                        2  0.353553       4.000000     2  0.000000   \n",
       "American Adjunct Lager        22  0.596255       3.272727    22  0.667748   \n",
       "American Amber / Red Ale      27  0.636049       3.870370    27  0.629294   \n",
       "American Amber / Red Lager     8  0.842509       3.375000     8  1.187735   \n",
       "American Barleywine           24  0.449940       3.729167    24  0.465766   \n",
       "...                          ...       ...            ...   ...       ...   \n",
       "Tripel                        17  0.363803       3.970588    17  0.329326   \n",
       "Vienna Lager                   8  0.534522       3.375000     8  0.517549   \n",
       "Weizenbock                     2  0.353553       4.250000     2  0.353553   \n",
       "Wheatwine                      5  0.353553       3.500000     5  0.353553   \n",
       "Witbier                       10  0.625833       3.600000    10  0.658281   \n",
       "\n",
       "                           review_palate                 review_taste        \\\n",
       "                                    mean count       std         mean count   \n",
       "beer_style                                                                    \n",
       "Altbier                         3.750000     2  0.353553     4.000000     2   \n",
       "American Adjunct Lager          2.909091    22  0.478996     2.750000    22   \n",
       "American Amber / Red Ale        3.555556    27  0.640513     3.777778    27   \n",
       "American Amber / Red Lager      3.187500     8  0.961305     3.125000     8   \n",
       "American Barleywine             3.895833    24  0.389514     3.937500    24   \n",
       "...                                  ...   ...       ...          ...   ...   \n",
       "Tripel                          3.911765    17  0.317967     4.176471    17   \n",
       "Vienna Lager                    3.562500     8  0.678101     3.312500     8   \n",
       "Weizenbock                      4.250000     2  0.353553     4.250000     2   \n",
       "Wheatwine                       4.000000     5  0.000000     3.700000     5   \n",
       "Witbier                         3.550000    10  0.761942     3.650000    10   \n",
       "\n",
       "                                      \n",
       "                                 std  \n",
       "beer_style                            \n",
       "Altbier                     0.000000  \n",
       "American Adjunct Lager      0.631514  \n",
       "American Amber / Red Ale    0.763763  \n",
       "American Amber / Red Lager  1.125992  \n",
       "American Barleywine         0.517362  \n",
       "...                              ...  \n",
       "Tripel                      0.350944  \n",
       "Vienna Lager                0.458063  \n",
       "Weizenbock                  0.353553  \n",
       "Wheatwine                   0.447214  \n",
       "Witbier                     0.529675  \n",
       "\n",
       "[93 rows x 15 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr[review_cols].agg(['mean', 'count', 'std'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Hierarchical Indexes in the columns can be awkward to work with, so you can move a level to the Index with `.stack`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>count</th>\n",
       "      <th>std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Altbier</th>\n",
       "      <th>review_appearance</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.707107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_aroma</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_overall</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_palate</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.353553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_taste</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">American Adjunct Lager</th>\n",
       "      <th>review_appearance</th>\n",
       "      <td>2.954545</td>\n",
       "      <td>22</td>\n",
       "      <td>0.722250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_aroma</th>\n",
       "      <td>2.613636</td>\n",
       "      <td>22</td>\n",
       "      <td>0.596255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_overall</th>\n",
       "      <td>3.272727</td>\n",
       "      <td>22</td>\n",
       "      <td>0.667748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_palate</th>\n",
       "      <td>2.909091</td>\n",
       "      <td>22</td>\n",
       "      <td>0.478996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_taste</th>\n",
       "      <td>2.750000</td>\n",
       "      <td>22</td>\n",
       "      <td>0.631514</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                              mean  count       std\n",
       "beer_style                                                         \n",
       "Altbier                review_appearance  4.000000      2  0.707107\n",
       "                       review_aroma       3.750000      2  0.353553\n",
       "                       review_overall     4.000000      2  0.000000\n",
       "                       review_palate      3.750000      2  0.353553\n",
       "                       review_taste       4.000000      2  0.000000\n",
       "American Adjunct Lager review_appearance  2.954545     22  0.722250\n",
       "                       review_aroma       2.613636     22  0.596255\n",
       "                       review_overall     3.272727     22  0.667748\n",
       "                       review_palate      2.909091     22  0.478996\n",
       "                       review_taste       2.750000     22  0.631514"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "multi = gr[review_cols].agg(['mean', 'count', 'std']).stack(level=0)\n",
    "multi.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "You can group by **levels** of a MultiIndex:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Altbier</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Adjunct Lager</th>\n",
       "      <td>2.613636</td>\n",
       "      <td>3.272727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Ale</th>\n",
       "      <td>3.555556</td>\n",
       "      <td>3.870370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>3.125000</td>\n",
       "      <td>3.437500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>American Barleywine</th>\n",
       "      <td>3.729167</td>\n",
       "      <td>3.958333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tripel</th>\n",
       "      <td>3.911765</td>\n",
       "      <td>4.264706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vienna Lager</th>\n",
       "      <td>3.250000</td>\n",
       "      <td>3.562500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weizenbock</th>\n",
       "      <td>3.750000</td>\n",
       "      <td>4.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wheatwine</th>\n",
       "      <td>3.500000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Witbier</th>\n",
       "      <td>3.550000</td>\n",
       "      <td>3.750000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 min       max\n",
       "beer_style                                    \n",
       "Altbier                     3.750000  4.000000\n",
       "American Adjunct Lager      2.613636  3.272727\n",
       "American Amber / Red Ale    3.555556  3.870370\n",
       "American Amber / Red Lager  3.125000  3.437500\n",
       "American Barleywine         3.729167  3.958333\n",
       "...                              ...       ...\n",
       "Tripel                      3.911765  4.264706\n",
       "Vienna Lager                3.250000  3.562500\n",
       "Weizenbock                  3.750000  4.250000\n",
       "Wheatwine                   3.500000  4.000000\n",
       "Witbier                     3.550000  3.750000\n",
       "\n",
       "[93 rows x 2 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "multi.groupby(level='beer_style')['mean'].agg(['min', 'max'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Group by **multiple** columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "brewer_id  beer_style                \n",
       "3          American Brown Ale            4.0\n",
       "4          American Wild Ale             3.5\n",
       "           Belgian IPA                   4.0\n",
       "           Dubbel                        3.5\n",
       "           Smoked Beer                   4.0\n",
       "                                        ... \n",
       "20729      American IPA                  4.0\n",
       "21239      Schwarzbier                   3.5\n",
       "21243      American Pale Ale (APA)       3.5\n",
       "23058      American Pale Ale (APA)       2.0\n",
       "23980      American Amber / Red Lager    4.5\n",
       "Name: review_overall, dtype: float64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['brewer_id', 'beer_style'])['review_overall'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>review_taste</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>brewer_id</th>\n",
       "      <th>beer_style</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <th>American Brown Ale</th>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">4</th>\n",
       "      <th>American Wild Ale</th>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Belgian IPA</th>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dubbel</th>\n",
       "      <td>4.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Smoked Beer</th>\n",
       "      <td>4.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20729</th>\n",
       "      <th>American IPA</th>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21239</th>\n",
       "      <th>Schwarzbier</th>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21243</th>\n",
       "      <th>American Pale Ale (APA)</th>\n",
       "      <td>4.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23058</th>\n",
       "      <th>American Pale Ale (APA)</th>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23980</th>\n",
       "      <th>American Amber / Red Lager</th>\n",
       "      <td>3.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>716 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                      review_appearance  review_aroma  \\\n",
       "brewer_id beer_style                                                    \n",
       "3         American Brown Ale                        4.0           4.0   \n",
       "4         American Wild Ale                         4.5           4.0   \n",
       "          Belgian IPA                               4.5           4.5   \n",
       "          Dubbel                                    4.5           3.5   \n",
       "          Smoked Beer                               4.5           3.5   \n",
       "...                                                 ...           ...   \n",
       "20729     American IPA                              4.0           4.5   \n",
       "21239     Schwarzbier                               4.0           3.5   \n",
       "21243     American Pale Ale (APA)                   4.0           2.5   \n",
       "23058     American Pale Ale (APA)                   4.0           2.0   \n",
       "23980     American Amber / Red Lager                3.5           3.0   \n",
       "\n",
       "                                      review_overall  review_palate  \\\n",
       "brewer_id beer_style                                                  \n",
       "3         American Brown Ale                     4.0            3.5   \n",
       "4         American Wild Ale                      3.5            4.0   \n",
       "          Belgian IPA                            4.0            4.0   \n",
       "          Dubbel                                 3.5            4.0   \n",
       "          Smoked Beer                            4.0            4.0   \n",
       "...                                              ...            ...   \n",
       "20729     American IPA                           4.0            4.0   \n",
       "21239     Schwarzbier                            3.5            4.0   \n",
       "21243     American Pale Ale (APA)                3.5            4.0   \n",
       "23058     American Pale Ale (APA)                2.0            3.0   \n",
       "23980     American Amber / Red Lager             4.5            4.5   \n",
       "\n",
       "                                      review_taste  \n",
       "brewer_id beer_style                                \n",
       "3         American Brown Ale                   3.5  \n",
       "4         American Wild Ale                    3.5  \n",
       "          Belgian IPA                          4.5  \n",
       "          Dubbel                               4.0  \n",
       "          Smoked Beer                          4.0  \n",
       "...                                            ...  \n",
       "20729     American IPA                         4.5  \n",
       "21239     Schwarzbier                          3.5  \n",
       "21243     American Pale Ale (APA)              3.0  \n",
       "23058     American Pale Ale (APA)              2.0  \n",
       "23980     American Amber / Red Lager           4.5  \n",
       "\n",
       "[716 rows x 5 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['brewer_id', 'beer_style'])[review_cols].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Example\n",
    "Find the relationship between `review` length (the text column) and average `review_overall`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       364\n",
       "1       590\n",
       "2      1786\n",
       "3       297\n",
       "4       510\n",
       "       ... \n",
       "994     626\n",
       "995     605\n",
       "996     477\n",
       "997     478\n",
       "998     894\n",
       "Name: text, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['text'].str.len()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pandas.core.groupby.DataFrameGroupBy object at 0x11310e898>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(df['text'].str.len())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "text\n",
       "16      4.00\n",
       "243     4.00\n",
       "254     3.25\n",
       "255     3.00\n",
       "257     3.75\n",
       "        ... \n",
       "2668    4.00\n",
       "2699    3.50\n",
       "2764    5.00\n",
       "3678    4.50\n",
       "3828    3.50\n",
       "Name: review_overall, dtype: float64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(df['text'].str.len())['review_overall'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>review_overall</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>4.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>243</td>\n",
       "      <td>4.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>254</td>\n",
       "      <td>3.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>255</td>\n",
       "      <td>3.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>257</td>\n",
       "      <td>3.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   text  review_overall\n",
       "0    16            4.00\n",
       "1   243            4.00\n",
       "2   254            3.25\n",
       "3   255            3.00\n",
       "4   257            3.75"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text_review = df.groupby(df['text'].str.len())['review_overall'].mean().reset_index()\n",
    "text_review.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>review_overall</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>text</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.121439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>review_overall</th>\n",
       "      <td>0.121439</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    text  review_overall\n",
       "text            1.000000        0.121439\n",
       "review_overall  0.121439        1.000000"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text_review.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x113126080>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhoAAAF5CAYAAADZMYNPAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzt3X18XHWd9//XJxMsdzZJW5q6SAvSG6EotRXaKhAbU4OB\na1139yoGqLi74HoLF9e14t1ey+V6gwuuKCIugui1ZI3L9dvfeim9iQ3WItAbSAregJ00gRYRCjS1\nUCiUpt/rjzMnOXPmzGRmMmdmkryfj8c8MnPO9/s9n3OSNt+c8/1+P+acQ0RERCQONZUOQERERCYu\ndTREREQkNupoiIiISGzU0RAREZHYqKMhIiIisVFHQ0RERGKjjoaIiIjERh0NERERiY06GiIiIhIb\ndTREREQkNlXR0TCzPzGzO83seTN72cweMbPFlY5LRERExqa20gGYWT1wP3AP0Ao8D8wD9lUyLhER\nERk7q3RSNTP7KrDcOddU0UBERESk5Krh0cl/AR4ys7vMbI+Z9ZrZ5ZUOSkRERMauGjoabwI+CuwA\n3gN8B7jJzFZXNCoREREZs2p4dPIqsM05d25g2zeBtzvn3pmlznS88RxPAK+UI04REZEJ4mjgZKDL\nObc37oNVfDAo8DTwWGjbY8Cf56jTCvxbbBGJiIhMfJcAP4z7INXQ0bgfWBDatgDYlaPOEwAdHR2c\ndtppMYU18Vx99dXceOONlQ5j3NF1K5yuWXF03Qqna1a4xx57jEsvvRRSv0vjVg0djRuB+83ss8Bd\nwFLgcuCKHHVeATjttNNYvFjLbeSrrq5O16sIum6F0zUrjq5b4XTNxqQsQw8qPhjUOfcQ8H6gHfg1\n8HngKufcjyoamIiIiIxZNdzRwDm3Flhb6ThERESktCp+R0NEREQmLnU0JpH29vZKhzAu6boVTtes\nOLpuhdM1q34VX0ejGKmEaz09PT0aBCQiIlKA3t5elixZArDEOdcb9/F0R0NERERio46GiIiIxEYd\nDREREYmNOhoiIiISG3U0REREJDbqaIiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYd\nDREREYmNOhoiIiISG3U0REREJDbqaIiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYd\nDREREYmNOhoiIiISG3U0REREJDbqaIiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYd\n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\nFdmmrz51AQbH2I7EKH19jGagjjjXyohaj2Pjxl+yceODJTtuNaz5USmT+dxFJF7mvDsEhVUy25hj\nt3PONRcVjJkBPwVe75xrylFuMdDT09PD4sWLizmUjEEymWTBggV4v5TOAvz3lwRKdQCrSSaTY74F\nn348/xjJkh43+hjFtzeeTOZzF5mMent7WbJkCcAS51xv3Mcrah0N59yKUgeScgtwOvDOfApfffXV\n1NXVpW1rb2+nvb09htDEl74+xm8C74NKt1ZG9HocpV2jo9rW/CinyXzuIhNdZ2cnnZ2dadv2799f\n1hiKXbCr5MzsZqANONc593Q+dW688Ubd0aiA9PUxzgq8D/41XLq1MtKP5x8jalvxx40+RvHtjSeT\n+dxFJrqoP74DdzTKotgxGiWV6mS8D1jhnNtd6Xgkt/T1MbbhjdH4JHGtlRG9Hsc2YApmnyjJcSfz\nmh+T+dxFpAzKMeI01wvvcck+vGmujYHX0TnqaNZJhQ0ODpZ11knm8XDNzStLOusk6hiTZebFZD53\nkcmm3LNOihoMWkpmdiR1wmF/5Zz71yx1NBi0SgTXxwBiT1oWtR5HqZOlTebka5P53EUmi3IPBq14\nR6MY6miIiIgUp9wdjaoYoyEiIiITkzoaIiIiEht1NERERCQ26miIiIhIbNTREBERkdiooyEiIiKx\nUUdDREREYqOOhoiIiMRGHQ0RERGJjToaIiIiEht1NERERCQ26miIiIhIbNTREBERkdiooyEiIiKx\nUUdDREREYqOOhoiIiMRGHQ0RERGJjToaIiIiEht1NERERCQ26miIiIhIbNTREBERkdiooyEiIiKx\nUUdDREREYqOOhoiIiMRGHQ0RERGJjToaIiIiEht1NERERCQ26miIiIhIbNTREBERkdiooyEiIiKx\nUUdDREREYqOOhoiIiMRGHQ0RERGJjToaIiIiEht1NERERCQ26miIiIhIbNTREBERkdiooyEiIiKx\nUUdDREREYqOOhoiIiMSmKjoaZnaumf3EzJ4ysyNm9qeVjklERETGrio6GsBxwMPAxwBX4VhERESk\nRGorHQCAc249sB7AzKzC4UhMkskk/f39zJ07l3nz5lU6HBERKYNquaMhE9jg4CDnn38BCxYsoK2t\njfnz53P++Rewb9++SocmIiIxU0dDYnfxxavp7t4CdAC7gQ66u7fQ3n5phSMTEZG4VcWjE5m4kskk\nXV1r8ToZl6S2XsLQkKOrazV9fX16jCIiMoGN647G1VdfTV1dXdq29vZ22tvbKxSRhPX396fenRfa\n0wTAzp071dEQEYlJZ2cnnZ2dadv2799f1hjGdUfjxhtvZPHixZUOQ3I49dRTU+/uZeSOBsAmAObO\nnVvukEREJo2oP757e3tZsmRJ2WKoio6GmR0HzAX8GSdvMrMzgUHn3JOVi0zGav78+bS2ttHdfSVD\nQw7vTsYmEomraGlp090MEZEJrloGg74d2A704K2j8c9AL/CFSgYlpdHZ2UFLyzJgNTAbWE1LyzI6\nOzsqHJmIiMStKu5oOOc2UT2dHimxhoYG1q9fQ19fHzt37tQ6GiIik0hVdDRkcpg3b546GCIik4zu\nIoiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYdDREREYmNOhoiIiISG3U0REREJDbq\naIiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYdDREREYmNOhoiIiISG3U0REREJDbq\naIiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYdDREREYmNOhoiIiISG3U0REREJDbq\naIiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYdDREREYmNOhoiIiISG3U0REREJDbq\naIiIiEhs1NEQERGR2KijISIiIrFRR0NERERio46GiIiIxEYdDREREYmNOhoiIiISG3U0REREJDZV\n09Ews4+b2eNmdtDMtpjZWZWOaaLp7OysdAjjkq5b4XTNiqPrVjhds+pXFR0NM7sI+GfgWuBtwCNA\nl5nNqGhgE4z+QRZH161wumbF0XUrnK5Z9auKjgZwNXCrc+5fnXO/Az4CvAz8dWXDEhERkbGoeEfD\nzI4ClgD3+Nuccw7oBpZXKi4REREZu4p3NIAZQALYE9q+B5hV/nBERESkVGorHUCRjgZ47LHHKh3H\nuLJ//356e3srHca4o+tWOF2z4ui6FU7XrHCB351Hl+N45j2lqJzUo5OXgb9wzv0ksP0HQJ1z7v0R\ndS4G/q1sQYqIiEw8lzjnfhj3QSp+R8M595qZ9QDvBn4CYGaW+nxTlmpdwCXAE8ArZQhTRERkojga\nOBnvd2nsKn5HA8DMVgE/wJttsg1vFspfAm92zj1XwdBERERkDCp+RwPAOXdXas2MfwQagYeBVnUy\n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\nV/ccYHqgZFAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11310e080>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "text_review.plot.scatter(x='text', y='review_overall')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "<div class=\"alert alert-info\">\n",
    "  <b>Bonus exercise</b>\n",
    "</div>\n",
    "\n",
    "- Try grouping by the number of words\n",
    "- Try grouping by the number of sentences\n",
    "\n",
    "_Hint_: `str.count` accepts a regular expression..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Example\n",
    "\n",
    "Which **brewer** (`brewer_id`) has the largest gap between the min and max `review_overall` for two of their beers?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "_Hint_: You'll need to do this in two steps:\n",
    "    1. Find the average `review_overall` by `brewer_id` and `beer_name`.\n",
    "    2. Find the difference between the max and min by brewer (rembember `.groupby(level=)`)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "brewer_id  beer_name                  \n",
       "3          Pecan Harvest Ale              4.0\n",
       "4          Allagash Burnham Road          4.0\n",
       "           Allagash Dubbel Ale            3.5\n",
       "           Allagash Hugh Malone           4.0\n",
       "           Allagash Interlude             3.5\n",
       "                                         ... \n",
       "20729      37hr Simcoe SMaSH              4.0\n",
       "21239      Schanzenbräu Schwarzbier       3.5\n",
       "21243      Harry's Pale Ale               3.5\n",
       "23058      Hoppy Dog                      2.0\n",
       "23980      Yuengling Traditional Lager    4.5\n",
       "Name: review_overall, dtype: float64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg = df.groupby(['brewer_id', 'beer_name'])['review_overall'].mean()\n",
    "avg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>brewer_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3.5</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20729</th>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21239</th>\n",
       "      <td>3.5</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21243</th>\n",
       "      <td>3.5</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23058</th>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23980</th>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>355 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           min  max\n",
       "brewer_id          \n",
       "3          4.0  4.0\n",
       "4          3.5  4.5\n",
       "8          4.5  4.5\n",
       "22         4.0  4.0\n",
       "24         4.5  4.5\n",
       "...        ...  ...\n",
       "20729      4.0  4.0\n",
       "21239      3.5  3.5\n",
       "21243      3.5  3.5\n",
       "23058      2.0  2.0\n",
       "23980      4.5  4.5\n",
       "\n",
       "[355 rows x 2 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extrema = avg.groupby(level='brewer_id').agg(['min', 'max'])\n",
    "extrema"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "brewer_id\n",
       "1805     3.000000\n",
       "1141     2.500000\n",
       "113      2.500000\n",
       "35       2.333333\n",
       "13371    2.000000\n",
       "           ...   \n",
       "2089     0.000000\n",
       "2097     0.000000\n",
       "2099     0.000000\n",
       "2171     0.000000\n",
       "3        0.000000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "difference = extrema['max'] - extrema['min']\n",
    "difference.sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Complex Example\n",
    "\n",
    "Create a more aggregated \"kind\" of beer, less detailed than `style`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0                    american stout\n",
       "1                   american porter\n",
       "2                   german pilsener\n",
       "3    american double / imperial ipa\n",
       "4           american pale ale (apa)\n",
       "Name: beer_style, dtype: object"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kind = df['beer_style'].str.lower()\\\n",
    "    .replace({'india pale ale': 'ipa', 'american pale ale': 'apa'})\n",
    "kind.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "kinds = ['ipa', 'apa', 'amber ale', 'rye', 'scotch', 'stout', \n",
    "         'barleywine', 'porter', 'brown ale', 'lager', 'pilsner',\n",
    "         'tripel', 'bitter', 'farmhouse', 'malt liquour', 'rice']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0              stout\n",
       "1             porter\n",
       "2    german pilsener\n",
       "3                ipa\n",
       "4                apa\n",
       "Name: beer_style, dtype: object"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for k in kinds:\n",
    "    kind.loc[kind.str.contains(k)] = k\n",
    "kind.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       True\n",
       "1       True\n",
       "2      False\n",
       "3       True\n",
       "4       True\n",
       "       ...  \n",
       "994     True\n",
       "995     True\n",
       "996     True\n",
       "997    False\n",
       "998     True\n",
       "Name: beer_style, dtype: bool"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kind.isin(kinds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     stout\n",
       "1    porter\n",
       "2     other\n",
       "3       ipa\n",
       "4       apa\n",
       "Name: beer_style, dtype: object"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kind[kind.isin(kinds) == False] = 'other'\n",
    "kind.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "#### Bonus\n",
    "We can use [regular expressions](https://docs.python.org/3/library/re.html) to do this in one (convoluted) line..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/kfor/anaconda/lib/python3.5/site-packages/ipykernel/__main__.py:3: FutureWarning: currently extract(expand=None) means expand=False (return Index/Series/DataFrame) but in a future version of pandas this will be changed to expand=True (return DataFrame)\n",
      "  app.launch_new_instance()\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0     stout\n",
       "1    porter\n",
       "2     other\n",
       "3       ipa\n",
       "4       apa\n",
       "dtype: object"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "expr = '|'.join(['(?P<{name}>{pat})'.format(pat=kind, name=kind.replace(' ', '_')) \n",
    "                 for kind in kinds])\n",
    "kind2 = df['beer_style'].str.lower()\\\n",
    "    .replace({'india pale ale': 'ipa', 'american pale ale': 'apa'})\\\n",
    "    .str.extract(expr).fillna('').sum(1)\\\n",
    "    .str.lower().replace('','other')\n",
    "kind2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "### Back to the example..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Find the highest rate \"kind\" of beer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pandas.core.groupby.DataFrameGroupBy object at 0x1131abf98>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr = df.groupby(kind)\n",
    "gr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beer_style\n",
       "bitter       4.166667\n",
       "farmhouse    4.060000\n",
       "ipa          4.009677\n",
       "porter       4.000000\n",
       "stout        3.986239\n",
       "Name: review_overall, dtype: float64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr['review_overall'].mean().sort_values(ascending=False).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "How are the different kinds of beers rated for each brewer?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "brewer_id  beer_style\n",
       "3          brown ale     4.000000\n",
       "4          ipa           4.000000\n",
       "           other         3.666667\n",
       "           tripel        4.500000\n",
       "8          apa           4.500000\n",
       "                           ...   \n",
       "20729      ipa           4.000000\n",
       "21239      other         3.500000\n",
       "21243      apa           3.500000\n",
       "23058      apa           2.000000\n",
       "23980      lager         4.500000\n",
       "Name: review_overall, dtype: float64"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['brewer_id', kind])['review_overall'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Find the number of beers of each kind by brewer:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>beer_style</th>\n",
       "      <th>apa</th>\n",
       "      <th>barleywine</th>\n",
       "      <th>bitter</th>\n",
       "      <th>brown ale</th>\n",
       "      <th>farmhouse</th>\n",
       "      <th>ipa</th>\n",
       "      <th>lager</th>\n",
       "      <th>other</th>\n",
       "      <th>pilsner</th>\n",
       "      <th>porter</th>\n",
       "      <th>rye</th>\n",
       "      <th>scotch</th>\n",
       "      <th>stout</th>\n",
       "      <th>tripel</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>brewer_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "beer_style  apa  barleywine  bitter  brown ale  farmhouse  ipa  lager  other  \\\n",
       "brewer_id                                                                      \n",
       "3           0.0         0.0     0.0        1.0        0.0  0.0    0.0    0.0   \n",
       "4           0.0         0.0     0.0        0.0        0.0  1.0    0.0    3.0   \n",
       "8           1.0         0.0     0.0        0.0        0.0  0.0    0.0    0.0   \n",
       "22          0.0         0.0     0.0        0.0        0.0  0.0    0.0    3.0   \n",
       "24          0.0         0.0     0.0        0.0        0.0  0.0    0.0    0.0   \n",
       "\n",
       "beer_style  pilsner  porter  rye  scotch  stout  tripel  \n",
       "brewer_id                                                \n",
       "3               0.0     0.0  0.0     0.0    0.0     0.0  \n",
       "4               0.0     0.0  0.0     0.0    0.0     1.0  \n",
       "8               0.0     0.0  0.0     0.0    0.0     0.0  \n",
       "22              0.0     0.0  0.0     0.0    0.0     1.0  \n",
       "24              0.0     0.0  0.0     1.0    0.0     0.0  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['brewer_id', kind])['beer_id'].nunique().unstack(1).fillna(0).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "We've seen a lot of permutations among number of groupers, number of columns to aggregate, and number of aggregators.\n",
    "\n",
    "\n",
    "In fact, the `.agg`, which returns one row per group, is just one kind of way to combine the results. The three ways are\n",
    "\n",
    "- `agg`: one row per results\n",
    "- `transform`: identically shaped output as input\n",
    "- `apply`: anything goes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Transform\n",
    "\n",
    "Combined `Series`/`DataFrame` is the same shape as the input. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "For example, say you want to standardize the reviews by subtracting the mean."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abv</th>\n",
       "      <th>beer_id</th>\n",
       "      <th>brewer_id</th>\n",
       "      <th>beer_name</th>\n",
       "      <th>beer_style</th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>profile_name</th>\n",
       "      <th>review_taste</th>\n",
       "      <th>text</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.0</td>\n",
       "      <td>2511</td>\n",
       "      <td>287</td>\n",
       "      <td>Bell's Cherry Stout</td>\n",
       "      <td>American Stout</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>blaheath</td>\n",
       "      <td>4.5</td>\n",
       "      <td>Batch 8144\\tPitch black in color with a 1/2 f...</td>\n",
       "      <td>2009-10-05 21:31:48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.7</td>\n",
       "      <td>19736</td>\n",
       "      <td>9790</td>\n",
       "      <td>Duck-Rabbit Porter</td>\n",
       "      <td>American Porter</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>GJ40</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Sampled from a 12oz bottle in a standard pint...</td>\n",
       "      <td>2009-10-05 21:32:09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.8</td>\n",
       "      <td>11098</td>\n",
       "      <td>3182</td>\n",
       "      <td>Fürstenberg Premium Pilsener</td>\n",
       "      <td>German Pilsener</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>biegaman</td>\n",
       "      <td>3.5</td>\n",
       "      <td>Haystack yellow with an energetic group of bu...</td>\n",
       "      <td>2009-10-05 21:32:13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9.5</td>\n",
       "      <td>28577</td>\n",
       "      <td>3818</td>\n",
       "      <td>Unearthly (Imperial India Pale Ale)</td>\n",
       "      <td>American Double / Imperial IPA</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>nick76</td>\n",
       "      <td>4.0</td>\n",
       "      <td>The aroma has pine, wood, citrus, caramel, an...</td>\n",
       "      <td>2009-10-05 21:32:37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.8</td>\n",
       "      <td>398</td>\n",
       "      <td>119</td>\n",
       "      <td>Wolaver's Pale Ale</td>\n",
       "      <td>American Pale Ale (APA)</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>champ103</td>\n",
       "      <td>3.0</td>\n",
       "      <td>A: Pours a slightly hazy golden/orange color....</td>\n",
       "      <td>2009-10-05 21:33:14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   abv  beer_id  brewer_id                            beer_name  \\\n",
       "0  7.0     2511        287                  Bell's Cherry Stout   \n",
       "1  5.7    19736       9790                   Duck-Rabbit Porter   \n",
       "2  4.8    11098       3182         Fürstenberg Premium Pilsener   \n",
       "3  9.5    28577       3818  Unearthly (Imperial India Pale Ale)   \n",
       "4  5.8      398        119                   Wolaver's Pale Ale   \n",
       "\n",
       "                       beer_style  review_appearance  review_aroma  \\\n",
       "0                  American Stout                4.5           4.0   \n",
       "1                 American Porter                4.5           4.0   \n",
       "2                 German Pilsener                4.0           3.0   \n",
       "3  American Double / Imperial IPA                4.0           4.0   \n",
       "4         American Pale Ale (APA)                4.0           3.0   \n",
       "\n",
       "   review_overall  review_palate profile_name  review_taste  \\\n",
       "0             4.5            4.0     blaheath           4.5   \n",
       "1             4.5            4.0         GJ40           4.0   \n",
       "2             3.0            3.0     biegaman           3.5   \n",
       "3             4.0            4.0       nick76           4.0   \n",
       "4             4.0            3.5     champ103           3.0   \n",
       "\n",
       "                                                text                time  \n",
       "0   Batch 8144\\tPitch black in color with a 1/2 f... 2009-10-05 21:31:48  \n",
       "1   Sampled from a 12oz bottle in a standard pint... 2009-10-05 21:32:09  \n",
       "2   Haystack yellow with an energetic group of bu... 2009-10-05 21:32:13  \n",
       "3   The aroma has pine, wood, citrus, caramel, an... 2009-10-05 21:32:37  \n",
       "4   A: Pours a slightly hazy golden/orange color.... 2009-10-05 21:33:14  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "def demean(x):\n",
    "    return x - x.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      0.652653\n",
       "1      0.652653\n",
       "2     -0.847347\n",
       "3      0.152653\n",
       "4      0.152653\n",
       "         ...   \n",
       "994   -0.347347\n",
       "995    1.152653\n",
       "996   -1.347347\n",
       "997   -0.347347\n",
       "998   -0.847347\n",
       "Name: review_overall, dtype: float64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "demean(df['review_overall'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "We can do this at the *person* level with `groupby` and `transform`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abv</th>\n",
       "      <th>beer_id</th>\n",
       "      <th>brewer_id</th>\n",
       "      <th>beer_name</th>\n",
       "      <th>beer_style</th>\n",
       "      <th>review_appearance</th>\n",
       "      <th>review_aroma</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_palate</th>\n",
       "      <th>profile_name</th>\n",
       "      <th>review_taste</th>\n",
       "      <th>text</th>\n",
       "      <th>time</th>\n",
       "      <th>review_overall_demeaned</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.0</td>\n",
       "      <td>2511</td>\n",
       "      <td>287</td>\n",
       "      <td>Bell's Cherry Stout</td>\n",
       "      <td>American Stout</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>blaheath</td>\n",
       "      <td>4.5</td>\n",
       "      <td>Batch 8144\\tPitch black in color with a 1/2 f...</td>\n",
       "      <td>2009-10-05 21:31:48</td>\n",
       "      <td>0.437500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.7</td>\n",
       "      <td>19736</td>\n",
       "      <td>9790</td>\n",
       "      <td>Duck-Rabbit Porter</td>\n",
       "      <td>American Porter</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>GJ40</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Sampled from a 12oz bottle in a standard pint...</td>\n",
       "      <td>2009-10-05 21:32:09</td>\n",
       "      <td>0.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.8</td>\n",
       "      <td>11098</td>\n",
       "      <td>3182</td>\n",
       "      <td>Fürstenberg Premium Pilsener</td>\n",
       "      <td>German Pilsener</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>biegaman</td>\n",
       "      <td>3.5</td>\n",
       "      <td>Haystack yellow with an energetic group of bu...</td>\n",
       "      <td>2009-10-05 21:32:13</td>\n",
       "      <td>-0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9.5</td>\n",
       "      <td>28577</td>\n",
       "      <td>3818</td>\n",
       "      <td>Unearthly (Imperial India Pale Ale)</td>\n",
       "      <td>American Double / Imperial IPA</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>nick76</td>\n",
       "      <td>4.0</td>\n",
       "      <td>The aroma has pine, wood, citrus, caramel, an...</td>\n",
       "      <td>2009-10-05 21:32:37</td>\n",
       "      <td>0.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.8</td>\n",
       "      <td>398</td>\n",
       "      <td>119</td>\n",
       "      <td>Wolaver's Pale Ale</td>\n",
       "      <td>American Pale Ale (APA)</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>champ103</td>\n",
       "      <td>3.0</td>\n",
       "      <td>A: Pours a slightly hazy golden/orange color....</td>\n",
       "      <td>2009-10-05 21:33:14</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   abv  beer_id  brewer_id                            beer_name  \\\n",
       "0  7.0     2511        287                  Bell's Cherry Stout   \n",
       "1  5.7    19736       9790                   Duck-Rabbit Porter   \n",
       "2  4.8    11098       3182         Fürstenberg Premium Pilsener   \n",
       "3  9.5    28577       3818  Unearthly (Imperial India Pale Ale)   \n",
       "4  5.8      398        119                   Wolaver's Pale Ale   \n",
       "\n",
       "                       beer_style  review_appearance  review_aroma  \\\n",
       "0                  American Stout                4.5           4.0   \n",
       "1                 American Porter                4.5           4.0   \n",
       "2                 German Pilsener                4.0           3.0   \n",
       "3  American Double / Imperial IPA                4.0           4.0   \n",
       "4         American Pale Ale (APA)                4.0           3.0   \n",
       "\n",
       "   review_overall  review_palate profile_name  review_taste  \\\n",
       "0             4.5            4.0     blaheath           4.5   \n",
       "1             4.5            4.0         GJ40           4.0   \n",
       "2             3.0            3.0     biegaman           3.5   \n",
       "3             4.0            4.0       nick76           4.0   \n",
       "4             4.0            3.5     champ103           3.0   \n",
       "\n",
       "                                                text                time  \\\n",
       "0   Batch 8144\\tPitch black in color with a 1/2 f... 2009-10-05 21:31:48   \n",
       "1   Sampled from a 12oz bottle in a standard pint... 2009-10-05 21:32:09   \n",
       "2   Haystack yellow with an energetic group of bu... 2009-10-05 21:32:13   \n",
       "3   The aroma has pine, wood, citrus, caramel, an... 2009-10-05 21:32:37   \n",
       "4   A: Pours a slightly hazy golden/orange color.... 2009-10-05 21:33:14   \n",
       "\n",
       "   review_overall_demeaned  \n",
       "0                 0.437500  \n",
       "1                 0.125000  \n",
       "2                -0.666667  \n",
       "3                 0.125000  \n",
       "4                 0.000000  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['review_overall_demeaned'] = df.groupby('profile_name')['review_overall'].transform(demean)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "This uses the *group* means instead of the overall means"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>profile_name</th>\n",
       "      <th>review_overall</th>\n",
       "      <th>review_overall_demeaned</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>05Harley</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>461</th>\n",
       "      <td>ADZA</td>\n",
       "      <td>3.5</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>ALeF</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>789</th>\n",
       "      <td>ATPete</td>\n",
       "      <td>3.0</td>\n",
       "      <td>-0.8125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>855</th>\n",
       "      <td>ATPete</td>\n",
       "      <td>2.5</td>\n",
       "      <td>-1.3125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>851</th>\n",
       "      <td>ATPete</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.1875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>819</th>\n",
       "      <td>ATPete</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.6875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>808</th>\n",
       "      <td>ATPete</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.1875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>802</th>\n",
       "      <td>ATPete</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.1875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>773</th>\n",
       "      <td>ATPete</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.1875</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    profile_name  review_overall  review_overall_demeaned\n",
       "140     05Harley             4.0                   0.0000\n",
       "461         ADZA             3.5                   0.0000\n",
       "23          ALeF             5.0                   0.0000\n",
       "789       ATPete             3.0                  -0.8125\n",
       "855       ATPete             2.5                  -1.3125\n",
       "851       ATPete             4.0                   0.1875\n",
       "819       ATPete             4.5                   0.6875\n",
       "808       ATPete             4.0                   0.1875\n",
       "802       ATPete             4.0                   0.1875\n",
       "773       ATPete             5.0                   1.1875"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[['profile_name','review_overall','review_overall_demeaned']]\\\n",
    "    .sort_values('profile_name').head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## Apply\n",
    "\n",
    "- `.apply()` can return all sorts of things, doesn't have to be the same shape...\n",
    "- Lots of uses, too many to go into..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "def something(x):\n",
    "    return x['review_appearance'].max() - x['review_aroma'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beer_style\n",
       "Altbier                       1.0\n",
       "American Adjunct Lager        2.5\n",
       "American Amber / Red Ale      3.0\n",
       "American Amber / Red Lager    2.5\n",
       "American Barleywine           1.5\n",
       "                             ... \n",
       "Tripel                        1.5\n",
       "Vienna Lager                  1.5\n",
       "Weizenbock                    0.5\n",
       "Wheatwine                     0.5\n",
       "Witbier                       2.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('beer_style').apply(something)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Or more succinctly as a `lambda` function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beer_style\n",
       "Altbier                       1.0\n",
       "American Adjunct Lager        2.5\n",
       "American Amber / Red Ale      3.0\n",
       "American Amber / Red Lager    2.5\n",
       "American Barleywine           1.5\n",
       "                             ... \n",
       "Tripel                        1.5\n",
       "Vienna Lager                  1.5\n",
       "Weizenbock                    0.5\n",
       "Wheatwine                     0.5\n",
       "Witbier                       2.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('beer_style')\\\n",
    "    .apply(lambda x: x['review_appearance'].max() - x['review_aroma'].min())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## References\n",
    "\n",
    "Slide materials inspired by and adapted from [Chris Fonnesbeck](https://github.com/fonnesbeck/statistical-analysis-python-tutorial) and [Tom Augspurger](https://github.com/TomAugspurger/pydata-chi-h2t)"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  },
  "livereveal": {
   "height": 768,
   "scroll": true,
   "slideNumber": true,
   "start_slideshow_at": "selected",
   "theme": "league",
   "width": 1024
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
